<#@ template language="C#" hostspecific="true" #>
<#@ assembly name="$(SolutionDir)\packages\AdoManager.1.1.6\lib\net45\AdoManager.dll" #>
<#//@ assembly name="EnvDTE" #>
<#//@ import namespace="EnvDTE" #>
<#@ import namespace="AdoManager" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
//var hostServiceProvider = (IServiceProvider)this.Host;
//var dte = (DTE)hostServiceProvider.GetService(typeof(DTE)); 
#>
using System;
using System.IO;

namespace AdoManager
{
	public static class Connections
	{
		<#
        string path =  Host.ResolvePath(".."); // Path.GetDirectoryName(dte.Solution.FullName) +
		
		path = File.Exists(Path.Combine(path, "App.Config"))
			? Path.Combine(path, "App.Config")
			: Path.Combine(path, "Web.Config");

		if(File.Exists(path)) 
		{
			//File.WriteAllText("D:\\test.txt", path);

			// Set Database Connetion from [Web.config] or [App.config]
			var data = File.ReadAllText(path);

			AdoManager.ConnectionManager.LoadFromXml(data);
			#>

			static Connections()
			{
				// Set Database Connetion from [Web.config] or [App.config]
				var data = File.ReadAllText(AppDomain.CurrentDomain.BaseDirectory + "<#= Path.GetFileName(path) #>");
			
				// load connections from config to AdoManager connections location
				ConnectionManager.LoadFromXml(data);
			}

			<#foreach (var conn in ConnectionManager.GetConnections())
			{#> 
			public static AdoManager.ConnectionManager <#=conn.Name#> { get { return ConnectionManager.Find("<#=conn.Name#>"); } }
			<#}
		}#>
	}
}